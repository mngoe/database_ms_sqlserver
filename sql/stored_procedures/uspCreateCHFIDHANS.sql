IF OBJECT_ID('[dbo].[uspCreateCHFIDHANS]', 'P') IS NOT NULL
    DROP PROCEDURE [dbo].[uspCreateCHFIDHANS]
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE OR ALTER PROCEDURE [dbo].[uspCreateCHFIDHANS]
(
	@HowMany INT
)
AS
BEGIN
	CREATE TABLE #tbl(Number NVARCHAR(50))

	DECLARE @CHFID NVARCHAR(50)
	DECLARE @CHFIDNEW NVARCHAR(50)
	DECLARE @lower INT = 1
	DECLARE @upper INT = 1000000
	DECLARE @Number DECIMAL(18,0)
	DECLARE @Count INT = 0
	
	IF @HowMany > @upper 
		SET @upper = @HowMany

	WHILE @Count < @HowMany
		BEGIN
		NEXT_NUMBER:
			SET @Number = ROUND((@upper - @lower) * RAND() + @lower,0)
			IF NOT EXISTS(SELECT Number From #tbl WHERE Number = @Number)
				INSERT INTO #tbl values(@Number)
			ELSE
				GOTO NEXT_NUMBER
			SET @Count = @Count + 1
		END

	UPDATE #tbl SET [Number] = RIGHT('000000000' + CAST([Number] AS NVARCHAR(8)) + CAST([Number] % 7 AS CHAR(1)),9)

	SELECT DISTINCT * FROM #tbl
	
	DECLARE LOOP1 CURSOR LOCAL FORWARD_ONLY FOR SELECT CHFID FROM tblInsuree WHERE ValidityTo IS NULL FOR UPDATE 
	OPEN LOOP1
	DECLARE LOOP2 CURSOR LOCAL FORWARD_ONLY FOR SELECT Number FROM #tbl
	OPEN LOOP2
	FETCH NEXT FROM LOOP2 INTO @CHFIDNEW
	FETCH NEXT FROM LOOP1 INTO @CHFID
	WHILE @@FETCH_STATUS = 0 
	BEGIN
		
		UPDATE dbo.tblInsuree SET CHFID = @CHFIDNEW where current of LOOP1
		
		FETCH NEXT FROM LOOP2 INTO @CHFIDNEW	
		FETCH NEXT FROM LOOP1 INTO @CHFID
		
	END
	CLOSE LOOP1
	DEALLOCATE LOOP1
	CLOSE LOOP2
	DEALLOCATE LOOP2
	
	DROP TABLE #tbl
END
GO
